{"version":3,"sources":["images/wslogo.svg","images/cart-ico.svg","images/mk_watch.jpg","images/header_hero.jpg","images/remove.svg","components/Header/index.jsx","components/HeroImage/index.jsx","components/Footer/index.jsx","components/ProductList/index.jsx","functions/index.js","context/index.js","components/ProductCard/index.jsx","components/ProductDetails/index.jsx","components/ShoppingCart/index.jsx","components/CartRow/index.jsx","components/MiniCartItem/index.jsx","components/Checkout/index.jsx","Pages/HomePage/index.jsx","Pages/ProductPage/index.jsx","Pages/CartPage/index.jsx","Pages/CheckoutPage/index.jsx","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","exact","src","WatchStoreLogo","alt","cartIcon","HeroImage","LeftImage","MainImage","Footer","href","ProductList","useState","productData","productList","setProductList","selectedFilter","setSelectedFilter","list","filterWord","filter","p","isNew","forGender","onClick","map","product","index","key","id","getCart","JSON","parse","window","sessionStorage","getItem","setCart","name","total","products","initCart","cartObject","setItem","stringify","getItemsCount","totalItems","i","Number","qty","addToCart","productId","undefined","find","item","newProducts","productItem","push","initProduct","getCartProducts","getCartTotal","totalPrice","length","getStockPrice","allProducts","price","getProductStock","cartItemsCountContext","createContext","cartTotalContext","ProductCard","setItemsCount","useContext","image","ProductDetails","match","setProductItem","itemAdded","setItemAdded","params","pid","useEffect","process","sku","setTimeout","addToCart_ClickHandle","ShoppingCart","cartProducts","setCartProducts","totalCart","setTotalCart","removeItemHanlder","deleteCartItem","cartProduct","open","yourname","prompt","checkoutHandler","CartRow","productQty","setProductQty","editCartHanler","updateCartItem","type","min","max","value","onChange","e","target","removeIcon","MiniCartItem","itemsCount","Checkout","customerName","setCustomerName","Name","cartItems","HomePage","Fragment","ProductPage","CartPage","Provider","AppRouter","path","component","CheckoutPage","App","basename","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.718ebadf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wslogo.1641a7e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart-ico.48aa2bc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/mk_watch.0fe42dc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header_hero.304f6e9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/remove.37f2ff9b.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.scss\";\n\nimport WatchStoreLogo from \"./../../images/wslogo.svg\";\nimport cartIcon from \"../../images/cart-ico.svg\";\nimport { MiniCartItem } from \"./../../components\";\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <NavLink to=\"/\" exact>\n          <img src={WatchStoreLogo} alt=\"watch store logo\" />\n        </NavLink>\n      </div>\n      <div className=\"right-menu\">\n        <div className=\"cart-small\">\n          <NavLink to=\"/cart\">\n            <img src={cartIcon} alt=\"cart\" />\n          </NavLink>\n          <NavLink to=\"/cart\">\n            <MiniCartItem />\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./heroimage.scss\";\nimport LeftImage from \"./../../images/mk_watch.jpg\";\nimport MainImage from \"./../../images/header_hero.jpg\";\nconst HeroImage = () => {\n  return (\n    <div className=\"hero-container\">\n      <div className=\"hero-left\">\n        <img src={LeftImage} alt=\"Michael Kors watch\" />\n      </div>\n      <div className=\"hero-right\">\n        <div>\n          <img src={MainImage} alt=\"NEW MEN WATCH\" />\n        </div>\n        <div className=\"hero-down\">\n          <div>\n            <p className=\"hero-maintext\">Free Worldwide Shipping</p>\n          </div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./footer.scss\";\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-links\">\n        <div className=\"font-default\">\n          <ul>\n            <li>\n              <Link to={`/`}>Products</Link>\n            </li>\n            <li>\n              <Link to={`/cart`}>Shopping Cart</Link>\n            </li>\n            <li>\n              <Link to={`#`}>About us</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"footer-down\">\n        <div>\n          <div className=\"text-left\">\n            <p className=\"font-default\">\n              Designed and Developed by Babak Jahangiri\n            </p>\n          </div>\n          <div className=\"social text-right\">\n            <a href=\"http://www.facebook.com\">\n              <i className=\"fab fa-facebook-f\"></i>\n            </a>\n            <a href=\"http://www.instagram.com\">\n              <i className=\"fab fa-instagram\"></i>\n            </a>\n\n            <a href=\"http://www.twitter.com\">\n              <i className=\"fab fa-twitter\"></i>\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./productlist.scss\";\nimport { ProductCard } from \"./../../components\";\n\nimport productData from \"./../../data/products.json\";\nconst ProductList = () => {\n  const [productList, setProductList] = useState(productData);\n  const [selectedFilter, setSelectedFilter] = useState(\"all\");\n\n  function list(filterWord) {\n    switch (filterWord) {\n      case \"new\":\n        setProductList(productData.filter((p) => p.isNew === true));\n        setSelectedFilter(\"new\");\n        break;\n      case \"men\":\n        setProductList(productData.filter((p) => p.forGender === \"m\"));\n        setSelectedFilter(\"men\");\n        break;\n      case \"women\":\n        setProductList(productData.filter((p) => p.forGender === \"f\"));\n        setSelectedFilter(\"women\");\n        break;\n      default:\n        setProductList(productData);\n        setSelectedFilter(\"all\");\n    }\n  }\n\n  return (\n    <main>\n      <nav className=\"product-list-filter\">\n        <p\n          className={\n            selectedFilter === \"new\" ? \"product-list-filter-selected\" : \"\"\n          }\n          onClick={() => {\n            list(\"new\");\n          }}\n        >\n          NEW\n        </p>\n        <p\n          className={\n            selectedFilter === \"all\" ? \"product-list-filter-selected\" : \"\"\n          }\n          onClick={() => {\n            list(\"all\");\n          }}\n        >\n          ALL\n        </p>\n        <p\n          className={\n            selectedFilter === \"men\" ? \"product-list-filter-selected\" : \"\"\n          }\n          onClick={() => {\n            list(\"men\");\n          }}\n        >\n          MEN\n        </p>\n        <p\n          className={\n            selectedFilter === \"women\" ? \"product-list-filter-selected\" : \"\"\n          }\n          onClick={() => {\n            list(\"women\");\n          }}\n        >\n          WOMEN\n        </p>\n      </nav>\n      <section className=\"product-list-main\">\n        {productList.map((product, index) => (\n          <ProductCard key={product.id} {...product} />\n        ))}\n      </section>\n    </main>\n  );\n};\n\nexport default ProductList;\n","import allProducts from \"./../data/products.json\";\n\nexport const initCart = () => {\n  if (window.sessionStorage.getItem(\"Cart\") === null) {\n    let cartObject = {\n      name: \"\", //customer name\n      total: 0,\n      products: [],\n    };\n    setCart(cartObject);\n  }\n};\n\n//it could work with localStorage as well if change sessionStorage to localStorage\n// ---------------------------------------------//\n//return the cart as an object\nexport const getCart = () => {\n  let cartObject = JSON.parse(window.sessionStorage.getItem(\"Cart\"));\n  if (cartObject === null) {\n    initCart();\n  }\n  return JSON.parse(window.sessionStorage.getItem(\"Cart\"));\n};\n\n//set object to the cart\nconst setCart = (cartObject) => {\n  window.sessionStorage.setItem(\"Cart\", JSON.stringify(cartObject));\n};\n\n// ---------------------------------------------------//\nexport const getItemsCount = () => {\n  let cartObject = getCart();\n  var totalItems = 0;\n  if (cartObject.products !== null) {\n    for (var i in cartObject.products) {\n      totalItems += Number(cartObject.products[i].qty);\n    }\n  }\n  return totalItems;\n};\n\nconst initProduct = (productId) => {\n  let productItem = {\n    id: productId,\n    qty: 1,\n  };\n  let cartObject = getCart();\n  cartObject.products.push(productItem);\n  setCart(cartObject);\n};\n\nexport const addToCart = (productId) => {\n  let cartObject = getCart();\n\n  //Check the Product array in the object is empty or not\n  //if (cartObject.products.length > 0) {\n  let productItem = cartObject.products.find((item) => item.id === productId);\n\n  //check if product id not found then add a product with qty:1 (initProduct)\n  if (productItem !== undefined) {\n    let newProducts = cartObject.products.map((item) =>\n      item.id === productId ? { ...item, qty: Number(item.qty) + 1 } : item\n    );\n    cartObject.products = newProducts;\n    setCart(cartObject);\n  } else {\n    initProduct(productId);\n  }\n  // }\n};\nexport const getCartProducts = () => {\n  let cartObject = getCart();\n  return cartObject.products;\n};\n\nexport const deleteCartItem = (productId) => {\n  let cartObject = getCart();\n  let newProducts = [];\n\n  for (var i = 0; i < cartObject.products.length; i++) {\n    if (cartObject.products[i].id !== productId) {\n      newProducts.push(cartObject.products[i]);\n    }\n  }\n\n  delete cartObject.products;\n  cartObject.products = newProducts;\n  setCart(cartObject);\n\n  return cartObject.products; //return manipulated cart object after delete\n};\n\nexport const updateCartItem = (productId, qty) => {\n  let cartObject = getCart();\n  let newProducts = [];\n\n  for (var i = 0; i < cartObject.products.length; i++) {\n    if (cartObject.products[i].id === productId) {\n      cartObject.products[i].qty = qty;\n    }\n    newProducts.push(cartObject.products[i]);\n  }\n\n  delete cartObject.products;\n  cartObject.products = newProducts;\n  setCart(cartObject);\n\n  return cartObject.products; //return edited products in the cart\n};\n\nexport const getCartTotal = () => {\n  let cartObject = getCart();\n  if (cartObject.products !== null) {\n    let totalPrice = 0;\n\n    for (let i = 0; i < cartObject.products.length; i++) {\n      totalPrice =\n        getStockPrice(cartObject.products[i].id) *\n          Number(cartObject.products[i].qty) +\n        totalPrice;\n    }\n    return Number(totalPrice);\n  }\n};\n\n///------Stock functions ------\n\nexport const getStockPrice = (productId) => {\n  let p = allProducts.find((item) => item.id === productId);\n  return Number(p.price);\n};\n\nexport const getProductStock = (productId) => {\n  return allProducts.find((item) => item.id === productId);\n};\n\n///----- Extra functions -----------\nexport const removeUserCart = () => {\n  window.sessionStorage.removeItem(\"Cart\");\n};\n\nexport function CheckBrowser() {\n  if (\"sessionStorage\" in window && window[\"sessionStorage\"] !== null) {\n    // We can use localStorage object to store data.\n    return true;\n  } else {\n    return false;\n    //message to user that we can not store the data\n  }\n}\n","import { createContext } from \"react\";\nimport { getItemsCount, getCartTotal } from \"./../functions\";\nexport const cartItemsCountContext = createContext(getItemsCount());\nexport const cartTotalContext = createContext(getCartTotal());\n","import React, { useContext } from \"react\";\nimport { addToCart, getItemsCount } from \"../../functions\";\nimport { cartItemsCountContext } from \"./../../context\";\nimport { Link } from \"react-router-dom\";\nimport \"./productcard.scss\";\n\nconst ProductCard = (product) => {\n  const { setItemsCount } = useContext(cartItemsCountContext);\n\n  const addToCart_ClickHandle = (productId) => {\n    addToCart(productId);\n    setItemsCount(getItemsCount());\n  };\n\n  return (\n    <div className=\"product-card\">\n      <div>\n        <Link to={\"product/\" + product.id}>\n          <img src={\"images/\" + product.image} alt={product.name} />\n        </Link>\n      </div>\n      <div className=\"product-card-down\">\n        <p className=\"product-card-title\">\n          <Link to={`product/${product.id}`}>{product.name}</Link>\n        </p>\n        <div>\n          <p className=\"product-card-price\">£{product.price}</p>\n          <p\n            className=\"product-card-Addbtn\"\n            onClick={() => addToCart_ClickHandle(product.id)}\n          >\n            Add To Card\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./productdetails.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { addToCart, getItemsCount } from \"../../functions\";\nimport { cartItemsCountContext } from \"./../../context\";\nimport allProducts from \"./../../data/products.json\";\n\nconst ProductDetails = ({ match }) => {\n  const [productItem, setProductItem] = useState(null);\n  const [itemAdded, setItemAdded] = useState(false);\n\n  const productId = match.params.pid;\n  const { setItemsCount } = useContext(cartItemsCountContext);\n  useEffect(() => {\n    setProductItem(allProducts.filter((p) => p.id === Number(productId)));\n  }, [productId]);\n\n  const addToCart_ClickHandle = (productId) => {\n    addToCart(productId);\n    setItemsCount(getItemsCount());\n\n    //Manage the add to cart message\n    setItemAdded(true);\n    setTimeout(() => {\n      setItemAdded(false);\n    }, 600);\n  };\n\n  // console.log(JSON.stringify(!productItem));\n\n  if (!productItem || productItem[0] === undefined) {\n    return <h1>Product not found</h1>;\n  } else {\n    return (\n      <section className=\"product-details-section\">\n        <div className=\"breadcrumbs\">\n          <p>\n            <NavLink to=\"/\" exact>\n              HOME &nbsp;&gt;&nbsp;\n            </NavLink>\n          </p>\n          <p> Products &nbsp;&gt;&nbsp; </p>\n          <p> {productItem[0].name}</p>\n        </div>\n        <div className=\"product-details-container\">\n          <div className=\"product-image-container\">\n            {\n              <img\n                src={`${process.env.PUBLIC_URL}/images/${productItem[0].image}`}\n                alt=\"\"\n              />\n            }\n          </div>\n          <div className=\"product-details-info\">\n            <div className=\"product-details-top\">\n              <h1>{productItem[0].name}</h1>\n              <p>{productItem[0].sku}</p>\n              <hr />\n              <h5>£ {productItem[0].price}</h5>\n              <p>Item in stock</p>\n            </div>\n            <div className=\"product-details-bottom\">\n              <span\n                className={`${itemAdded === true ? \"hide-element\" : \"hidden\"}`}\n              >\n                Item added to your cart\n              </span>\n\n              <button\n                className=\"btn-AddtoCart\"\n                onClick={() => addToCart_ClickHandle(productItem[0].id)}\n              >\n                Add To Cart\n              </button>\n              <p>FREE SHIPPING AND RETURNS</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nexport default ProductDetails;\n","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { cartItemsCountContext, cartTotalContext } from \"./../../context\";\nimport { CartRow } from \"./../../components\";\nimport {\n  getCartProducts,\n  deleteCartItem,\n  getItemsCount,\n  getCartTotal,\n} from \"./../../functions\";\n\nimport \"./shoppingcart.scss\";\n\nconst ShoppingCart = () => {\n  const [cartProducts, setCartProducts] = useState(getCartProducts);\n\n  //for mini basket items count\n  const { setItemsCount } = useContext(cartItemsCountContext);\n  const { totalCart, setTotalCart } = useContext(cartTotalContext);\n\n  function removeItemHanlder(pid) {\n    setCartProducts(deleteCartItem(pid));\n    setItemsCount(getItemsCount());\n    setTotalCart(getCartTotal());\n  }\n\n  function continueShoppingHandler() {\n    window.open(`${process.env.PUBLIC_URL}/`);\n  }\n\n  function checkoutHandler() {\n    let yourname = window.prompt(\"Please Enter your name: \");\n\n    if (yourname != null) {\n      window.open(`${process.env.PUBLIC_URL}/checkout/${yourname}`);\n    }\n  }\n\n  return (\n    <section className=\"shoppingcart-container\">\n      <div className=\"breadcrumbs\">\n        <p>\n          <NavLink to=\"/\" exact>\n            HOME &nbsp;&gt;&nbsp;\n          </NavLink>\n        </p>\n        <p> Products &nbsp;&gt;&nbsp; </p>\n        <p> Shopping Cart</p>\n      </div>\n      <div className=\"shoppingcart\">\n        <div className=\"shoppingcart-header\">\n          <ul>\n            <li>Products</li>\n            <li>Quantity</li>\n            <li>Price</li>\n            <li></li>\n          </ul>\n        </div>\n\n        <div className=\"shoppingcart-body\">\n          {cartProducts.map((product, index) => (\n            <CartRow\n              cartProduct={product}\n              key={product.id}\n              removeItemHanlder={removeItemHanlder}\n            />\n          ))}\n        </div>\n        <div className=\"shopping-cart-totalprice\">\n          <div> </div>\n          <div> </div>\n          <div>Total Price :</div>\n          <div>£ {totalCart}</div>\n          <div></div>\n        </div>\n\n        <div className=\"shoppingcart-footer\">\n          <div>\n            <button\n              className=\"btn-shopping\"\n              onClick={() => continueShoppingHandler()}\n            >\n              Continue Shopping\n            </button>\n          </div>\n          <div>\n            <button className=\"btn-checkout\" onClick={() => checkoutHandler()}>\n              Checkout\n            </button>\n            <p>FREE SHIPPING AND RETURNS</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ShoppingCart;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { cartItemsCountContext, cartTotalContext } from \"./../../context\";\nimport {\n  updateCartItem,\n  getProductStock,\n  getItemsCount,\n  getCartTotal,\n} from \"../../functions\";\nimport removeIcon from \"./../../images/remove.svg\";\nimport \"./cartrow.scss\";\n\nconst CartRow = ({ cartProduct, removeItemHanlder }) => {\n  //for mini basket items count\n  const { setItemsCount } = useContext(cartItemsCountContext);\n  const { setTotalCart } = useContext(cartTotalContext);\n\n  const [productData] = useState(getProductStock(cartProduct.id));\n  const [productQty, setProductQty] = useState(cartProduct.qty);\n\n  function editCartHanler(pid, qty) {\n    if (Number(qty) < 100) {\n      setProductQty(qty);\n      updateCartItem(pid, qty);\n      setItemsCount(getItemsCount());\n      setTotalCart(getCartTotal());\n    }\n  }\n\n  return (\n    <div className=\"shoppingcart-row\">\n      <div className=\"shoppingcart-product-image\">\n        <Link to={\"product/\" + productData.id}>\n          <img src={`images/${productData.image}`} alt=\"{productData.name}\" />\n        </Link>\n      </div>\n\n      <div className=\"shoppingcart-product-name\">\n        <Link to={\"product/\" + productData.id}>\n          <h2>{productData.name}</h2>\n          <h5>£ {productData.price}</h5>\n        </Link>\n      </div>\n\n      <div className=\"shoppingcart-product-qty\">\n        <input\n          type=\"number\"\n          id=\"qty\"\n          name=\"qty\"\n          min=\"1\"\n          max=\"99\"\n          value={productQty}\n          onChange={(e) => editCartHanler(cartProduct.id, e.target.value)}\n        />\n      </div>\n      <div className=\"shoppingcart-product-price\">\n        <h3>£ {productData.price * productQty}</h3>\n      </div>\n      <div className=\"shoppingcart-product-remove\">\n        <img\n          src={removeIcon}\n          alt=\"remove\"\n          onClick={() => {\n            removeItemHanlder(cartProduct.id);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CartRow;\n","import React, { useContext } from \"react\";\n//import { cartItemsNumber } from \"./../../functions\";\nimport { cartItemsCountContext } from \"./../../context\";\n\nimport \"./minicart-item.scss\";\n\nconst MiniCartItem = () => {\n  const { itemsCount } = useContext(cartItemsCountContext);\n\n  return (\n    <div>\n      <p className=\"mc-items\">\n        {itemsCount === 0 && \"empty\"}\n        {itemsCount === 1 && itemsCount + \" item\"}\n        {itemsCount > 1 && itemsCount + \" items\"}\n      </p>\n    </div>\n  );\n};\n\nexport default MiniCartItem;\n","import React, { useState, useEffect } from \"react\";\nimport { getCartProducts } from \"./../../functions\";\n\nimport { InvoiceRow } from \"./../../components\";\nimport \"./checkout.scss\";\n\nconst Checkout = ({ match }) => {\n  //const { setItemsCount } = useContext(cartItemsCountContext);\n  const [customerName, setCustomerName] = useState(\"\");\n  const Name = match.params.name;\n\n  const [cartItems] = useState(getCartProducts());\n\n  //props.location.query.name\n\n  useEffect(() => {\n    setCustomerName(Name);\n  }, [Name]);\n\n  return (\n    <div className=\"checkout-page-container\">\n      <p>\n        Dear <b>{customerName}</b>, Thank you for your order.\n      </p>\n      <p>we will deliver below order asap.</p>\n\n      <div className=\"invoice-container\">\n        <div className=\"invoice-header\">\n          <ul>\n            <li>Products</li>\n            <li>Quantity</li>\n            <li>Price</li>\n          </ul>\n        </div>\n        <div className=\"invoice-body\">\n          {cartItems.map((product, index) => (\n            // <div key={product.name}>{product.name}</div>\n            <InvoiceRow key={product.id} cartItem={product}></InvoiceRow>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport { HeroImage, ProductList } from \"./../../components\";\n\nconst HomePage = () => {\n  return (\n    <React.Fragment>\n      <HeroImage />\n      <ProductList />\n    </React.Fragment>\n  );\n};\nexport default HomePage;\n","import React from \"react\";\nimport { ProductDetails } from \"./../../components\";\nconst ProductPage = ({ match }) => {\n  //console.log(match);\n  return <ProductDetails match={match} />;\n};\n\nexport default ProductPage;\n","import React, { useState, Fragment } from \"react\";\nimport { ShoppingCart } from \"./../../components\";\nimport { cartTotalContext } from \"./../../context\";\nimport { getCartTotal, getCartProducts } from \"./../../functions\";\nimport \"./cartpage.scss\";\nconst CartPage = () => {\n  const [totalCart, setTotalCart] = useState(getCartTotal);\n\n  return (\n    <Fragment>\n      <cartTotalContext.Provider value={{ totalCart, setTotalCart }}>\n        {getCartProducts().length > 0 ? (\n          <ShoppingCart />\n        ) : (\n          <p className=\"sc-empty\">Your cart is empty</p>\n        )}\n      </cartTotalContext.Provider>\n    </Fragment>\n  );\n};\n\nexport default CartPage;\n","import React from \"react\";\nimport { Checkout } from \"./../../components\";\n\nconst HomePage = ({ match }) => {\n  return <Checkout match={match} />;\n};\nexport default HomePage;\n","import React from \"react\";\nimport { HomePage, ProductPage, CartPage, CheckoutPage } from \"./Pages\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction AppRouter() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={HomePage}></Route>\n      <Route path=\"/product/:pid\" component={ProductPage}></Route>\n      <Route path=\"/cart\" exact component={CartPage}></Route>\n      <Route path=\"/checkout/:name\" component={CheckoutPage}></Route>\n    </Switch>\n  );\n}\n\nexport default AppRouter;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport AppRouter from \"./AppRouter\";\nimport { Header, Footer } from \"./components\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { cartItemsCountContext } from \"./context\";\nimport { getItemsCount } from \"./functions\";\n\nfunction App() {\n  const [itemsCount, setItemsCount] = useState(getItemsCount());\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <cartItemsCountContext.Provider value={{ itemsCount, setItemsCount }}>\n        <Header />\n        <AppRouter />\n      </cartItemsCountContext.Provider>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}